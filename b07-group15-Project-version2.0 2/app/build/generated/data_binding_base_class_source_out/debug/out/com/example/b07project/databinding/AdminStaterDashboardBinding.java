// Generated by view binder compiler. Do not edit!
package com.example.b07project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.b07project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AdminStaterDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView eventsHistory;

  @NonNull
  public final TextView logout;

  @NonNull
  public final TextView newAnnounce;

  @NonNull
  public final TextView newEvent;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView viewAnnouncement;

  @NonNull
  public final TextView viewComplaint;

  private AdminStaterDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView eventsHistory, @NonNull TextView logout, @NonNull TextView newAnnounce,
      @NonNull TextView newEvent, @NonNull TextView textView, @NonNull TextView viewAnnouncement,
      @NonNull TextView viewComplaint) {
    this.rootView = rootView;
    this.eventsHistory = eventsHistory;
    this.logout = logout;
    this.newAnnounce = newAnnounce;
    this.newEvent = newEvent;
    this.textView = textView;
    this.viewAnnouncement = viewAnnouncement;
    this.viewComplaint = viewComplaint;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminStaterDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminStaterDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_stater_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminStaterDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.events_history;
      TextView eventsHistory = ViewBindings.findChildViewById(rootView, id);
      if (eventsHistory == null) {
        break missingId;
      }

      id = R.id.logout;
      TextView logout = ViewBindings.findChildViewById(rootView, id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.new_announce;
      TextView newAnnounce = ViewBindings.findChildViewById(rootView, id);
      if (newAnnounce == null) {
        break missingId;
      }

      id = R.id.new_event;
      TextView newEvent = ViewBindings.findChildViewById(rootView, id);
      if (newEvent == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.view_announcement;
      TextView viewAnnouncement = ViewBindings.findChildViewById(rootView, id);
      if (viewAnnouncement == null) {
        break missingId;
      }

      id = R.id.view_complaint;
      TextView viewComplaint = ViewBindings.findChildViewById(rootView, id);
      if (viewComplaint == null) {
        break missingId;
      }

      return new AdminStaterDashboardBinding((ConstraintLayout) rootView, eventsHistory, logout,
          newAnnounce, newEvent, textView, viewAnnouncement, viewComplaint);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
