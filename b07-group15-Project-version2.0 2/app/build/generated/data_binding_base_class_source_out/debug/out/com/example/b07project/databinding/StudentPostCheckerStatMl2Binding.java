// Generated by view binder compiler. Do not edit!
package com.example.b07project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.b07project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StudentPostCheckerStatMl2Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button MLno2;

  @NonNull
  public final Button MLyes2;

  @NonNull
  public final Toolbar backBar;

  @NonNull
  public final TextView textView13;

  private StudentPostCheckerStatMl2Binding(@NonNull ConstraintLayout rootView,
      @NonNull Button MLno2, @NonNull Button MLyes2, @NonNull Toolbar backBar,
      @NonNull TextView textView13) {
    this.rootView = rootView;
    this.MLno2 = MLno2;
    this.MLyes2 = MLyes2;
    this.backBar = backBar;
    this.textView13 = textView13;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static StudentPostCheckerStatMl2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static StudentPostCheckerStatMl2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.student_post_checker_stat_ml2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static StudentPostCheckerStatMl2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.MLno2;
      Button MLno2 = ViewBindings.findChildViewById(rootView, id);
      if (MLno2 == null) {
        break missingId;
      }

      id = R.id.MLyes2;
      Button MLyes2 = ViewBindings.findChildViewById(rootView, id);
      if (MLyes2 == null) {
        break missingId;
      }

      id = R.id.back_bar;
      Toolbar backBar = ViewBindings.findChildViewById(rootView, id);
      if (backBar == null) {
        break missingId;
      }

      id = R.id.textView13;
      TextView textView13 = ViewBindings.findChildViewById(rootView, id);
      if (textView13 == null) {
        break missingId;
      }

      return new StudentPostCheckerStatMl2Binding((ConstraintLayout) rootView, MLno2, MLyes2,
          backBar, textView13);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
